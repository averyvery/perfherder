# Perfherder 0.1

Perfherder tracks errors and runs performance evaluations using GA events. See index.html for installation and examples.

## Why would I use it?

Aggregating site-wide data is is a good way to spot trouble areas like slow pages, slow features, or rare browser-specific errors. Google Analytics is a natural choice for tracking JS issues, as it provides free data collection and powerful tools for viewing and understanding your data. 

## What will I see in Google Analytics?

Perfherder tracks events under **Perf By URI**, **Perf By Browser**, **Error By Type**, and **Error By Browser**.

Each event is logged once in both of its categories, which allows you to to narrow down issues on particular pages or in certain browsers.

For perf, Perfherder tracks:

- URI
- Simplified user agent
- Custom tracking name (eg: "Slideshow Setup Time")
- Milliseconds elapsed since pageload or a custom point

GA will also provide average values for the milliseconds.

For errors, Perfherder tracks:

- Error message
- Simplified user agent
- URI (and JS filename, if available)
- Line number (if available)

## How Do I Use It?

- <code>_prf_st</code>: Start-time var, must be set to <code>new Date().getTime()</code> in the &lt;head&gt;
- <code>_prf_mark(mark_name)</code>: Mark a particular time to track against later.
- <code>_prf(name)</code>: Track the elapsed time since pageload, using the action name [name]
- <code>_prf(name, mark_name)</code>: Track the elapsed time since <code>mark_name</code> was marked.
- <code>_prf_error(error)</code>: Track an error returned by a catch statement.
- <code>_prf_trackerrors</code>: Enable automatic error tracking on the window.
- <code>_prf_trackerrors(false)</code>: Disable automatic error tracking.

## Will this interfere with my existing site tracking?
 
 > "For each visit (user session), a maximum of approximately 500 combined GATC requests (both events and page views) can be tracked."  - [GA docs](http://code.google.com/apis/analytics/docs/tracking/eventTrackerGuide.html)

Each perfherder error or check tracks two GA events. It is possible to track so many events that you hit GA's limit and can no longer receive valuable information about a user. This is especially dangerous in an eCommerce situation, where a user's final actions are the most valuable.

Be especially careful not to calling <code>_prf</code> inside large loops, because this could quickly cause you to hit a user's limit. If you must track the performance of an item in a loop, only call <code>_prf</code> if <code>i === 0</code>.


